[{"/Users/rustam-nortadzhiev/Desktop/MyProjects/todo-app/src/index.js":"1","/Users/rustam-nortadzhiev/Desktop/MyProjects/todo-app/src/App.js":"2","/Users/rustam-nortadzhiev/Desktop/MyProjects/todo-app/src/reportWebVitals.js":"3","/Users/rustam-nortadzhiev/Desktop/MyProjects/todo-app/src/ListItem.js":"4"},{"size":491,"mtime":1611346218541,"results":"5","hashOfConfig":"6"},{"size":3605,"mtime":1611686663462,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1611247402136,"results":"8","hashOfConfig":"6"},{"size":2209,"mtime":1611505876939,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"hi6nhf",{"filePath":"13","messages":"14","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"/Users/rustam-nortadzhiev/Desktop/MyProjects/todo-app/src/index.js",[],["20","21"],"/Users/rustam-nortadzhiev/Desktop/MyProjects/todo-app/src/App.js",["22","23"],"import React, { useCallback } from 'react';\nimport './App.css';\nimport ListItem from './ListItem';\nfunction App() {\n  const [items, setItems] = React.useState([]);\n  const [currentItem, setCurrentItem] = React.useState({ text: '', key: null });\n  const [status, setStatus] = React.useState('uncompleted');\n  const [filteredTodos, setFiltredTodos] = React.useState([]);\n\n  React.useEffect(() => {\n    const getLocalTodos = () => {\n      if (localStorage.getItem('items') === null) {\n        localStorage.setItem('items', JSON.stringify([]));\n      } else {\n        let localTodos = JSON.parse(localStorage.getItem('items'));\n        setItems(localTodos);\n      }\n    };\n    getLocalTodos();\n  }, []);\n\n  const filterHandler = useCallback(() => {\n    switch (status) {\n      case 'completed':\n        setFiltredTodos(items.filter((item) => item.completed === true));\n        break;\n      case 'uncompleted':\n        setFiltredTodos(items.filter((item) => item.completed === false));\n        break;\n      default:\n        setFiltredTodos(items);\n        break;\n    }\n  }, [items, status]);\n\n  React.useEffect(() => {\n    const saveLocalTodos = () => {\n      localStorage.setItem('items', JSON.stringify(items));\n    };\n    filterHandler();\n    saveLocalTodos();\n  }, [filterHandler, items, status]);\n\n  const handleInput = (e) => {\n    const value = e.target.value;\n    setCurrentItem((prevState) => ({\n      ...prevState,\n      text: value,\n      key: Date.now(),\n      completed: false,\n    }));\n  };\n\n  const addItem = (e) => {\n    e.preventDefault();\n    const newItem = currentItem;\n    if (currentItem.text !== '') {\n      const newItems = [...items, newItem];\n      setItems(newItems);\n      setCurrentItem((prevState) => ({\n        ...prevState,\n        text: '',\n        key: '',\n      }));\n    }\n  };\n\n  const deleteItem = (key) => {\n    const filteredItems = items.filter((item) => item.key !== key);\n    setItems(filteredItems);\n  };\n\n  const setUpdate = (text, key) => {\n    setItems(\n      items.map((item) => {\n        if (item.key === key) {\n          return {\n            ...item,\n            text: text,\n          };\n        }\n        return item;\n      })\n    );\n  };\n\n  const setCompleted = (completed, key) => {\n    setItems(\n      items.map((item) => {\n        if (item.key === key) {\n          return {\n            ...item,\n            completed: completed,\n          };\n        }\n        return item;\n      })\n    );\n  };\n\n  return (\n    <div className='App'>\n      <header>\n        <form id='to-do-form' onSubmit={addItem}>\n          <input\n            type='text'\n            value={currentItem.text}\n            onChange={handleInput}\n            placeholder='Enter your text here...'\n          />\n          <button type='submit'>Add</button>\n          <div className='form-group mt-3 pr-4'>\n            <select\n              defaultValue={status}\n              className='form-control'\n              onChange={(e) => setStatus(e.target.value)}\n            >\n              <option value='all'>All</option>\n              <option value='completed'>Completed</option>\n              <option value='uncompleted'>Uncompleted</option>\n            </select>\n          </div>\n        </form>\n        <hr style={{ backgroundColor: 'white' }} />\n        {filteredTodos.map((item) => {\n          return (\n            <ListItem\n              key={item.key}\n              item={item}\n              deleteItm={deleteItem}\n              updateItem={setUpdate}\n              setCompleted={setCompleted}\n            />\n          );\n        })}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/rustam-nortadzhiev/Desktop/MyProjects/todo-app/src/reportWebVitals.js",[],"/Users/rustam-nortadzhiev/Desktop/MyProjects/todo-app/src/ListItem.js",[],{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":8,"column":10,"nodeType":"30","messageId":"31","endLine":8,"endColumn":23},{"ruleId":"32","severity":2,"message":"33","line":125,"column":10,"nodeType":"30","messageId":"34","endLine":125,"endColumn":27},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'filteredTodos' is assigned a value but never used.","Identifier","unusedVar","no-undef","'filteredTodosmain' is not defined.","undef","no-global-assign","no-unsafe-negation"]